@use "sass:map";
@use "reboot";

// >>-- 10 Badge css start --<<

.badge {
  padding: 0.3em 0.9em 0.3em;
  font-weight: 600;
  letter-spacing: 0.5px;
  line-height: 1.4;
  &.badge-notification {
    padding: 0.3em 0.5em 0.15em;
    // font-size: 11px;
  }
}

@mixin badge_mixin($name, $color) {
  .text-bg-#{$name} {
    background-color: rgba(#{$color}, 1) !important;
    color: rgba(var(--white), 1);
    &:hover,
    &:active,
    &.active,
    &.show,
    &:checked,
    &:focus {
      background-color: rgba(#{$color}, 0.9);
    }
  }

  .text-outline-#{$name} {
    background-color: transparent;
    color: rgba(#{$color}, 1);
    border: 1px solid rgba(#{$color}, 1);
    &:hover,
    &.active,
    &.show,
    &:checked,
    &:focus {
      background-color: rgba(#{$color}, 1);
      color: rgba(var(--white), 1);
    }
  }

  .text-light-#{$name} {
    background-color: rgba(#{$color}, 0.1);
    color: rgba(#{$color}, 1);
    border-color: transparent;
    transition: var(--app-transition);
    &:hover,
    &.active,
    &.show,
    &:checked,
    &:focus {
      background-color: rgba(#{$color}, 0.2);
      border-color: rgba(#{$color}, 1);
      color: rgba(#{$color}, 1);
      transition: var(--app-transition);
    }
  }
}

@each $name, $color in reboot.$colors {
  @include badge_mixin("" + $name, map.get(reboot.$colors, $name));
}

// >>-- 10 Badge css end --<<
